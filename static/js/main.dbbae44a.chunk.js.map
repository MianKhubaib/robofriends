{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/SearchBox.js","components/Scroll.js","components/ErrorBounding.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","id","email","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBounding","state","hasError","this","Component","App","onSearchChange","event","setState","target","value","fetch","then","response","json","users","filteredrobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAaeA,EAXF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,GAAKC,EAAW,EAAXA,MACxB,OACC,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,eACpB,gCACI,6BAAKD,IACL,4BAAIE,WCUDI,EAfE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACA,8BACKA,EAAOC,KAAI,SAACC,EAAMC,GACrB,OAAQ,cAAC,EAAD,CACHT,GAAIM,EAAOG,GAAGT,GACbD,KAAMO,EAAOG,GAAGV,KACfE,MAAOK,EAAOG,GAAGR,OAHLQ,SCSRC,EAdG,SAAC,GACnB,EADoBC,YACnB,IAD+BC,EAChC,EADgCA,aAE5B,OACA,qBAAKV,UAAU,mDAAf,SACG,uBACKA,UAAU,GACXW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGNI,EAXA,SAACC,GAEZ,OAEI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAO,kBAAoBC,OAAQ,SAApE,SAECJ,EAAMK,YCWAC,E,kDAhBX,WAAYN,GACX,IAAD,8BACI,cAAMA,IACDO,MAAQ,CACTC,UAAS,GAHjB,E,0CAOA,WACG,OAAGC,KAAKF,MAAMC,SACH,mDAEJC,KAAKT,MAAMK,a,GAbGK,aC+DZC,E,kDAvDZ,aAAc,IAAD,8BACT,gBAcNC,eAAgB,SAACC,GAEf,EAAKC,SAAS,CAACpB,YAAcmB,EAAME,OAAOC,SAftC,EAAKT,MAAQ,CACTlB,OAAO,GACPK,YAAY,IAJP,E,qDASjB,WAAoB,IAAD,OACjBuB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAU,EAAKP,SAAS,CAACzB,OAAOgC,S,oBAUpC,WAAU,IAAD,EACuBZ,KAAKF,MAA3BlB,EADD,EACCA,OAASK,EADV,EACUA,YACb4B,EAAejC,EAAOkC,QACxB,SAAAC,GACI,OAAOA,EAAM1C,KAAK2C,cAAcC,SAAShC,EAAY+B,kBAG3D,OAAIpC,EAAOsC,OAUP,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,aAAd,8BACA,cAAC,EAAD,CAAWU,aAAcc,KAAKG,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUvB,OAAQiC,WAZzB,qBAAKrC,UAAU,aAAf,SACC,mD,GAnCMyB,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OAEH,cAAC,EAAD,IACHC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.dbbae44a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name , id , email}) => {\r\n   return(\r\n    <div className='bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n        <img alt='robot' src={`https://robohash.org/${id}?200x2001`}/>\r\n        <div>\r\n            <h2>{name}</h2>\r\n            <p>{email}</p>\r\n        </div>\r\n    </div>\r\n   );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({robots}) => {\r\n  return (\r\n  <div>\r\n     { robots.map((user, i) =>{\r\n    return  <Card key={i} \r\n         id={robots[i].id}\r\n          name={robots[i].name}\r\n           email={robots[i].email}\r\n           />\r\n   })\r\n}\r\n      </div>\r\n      );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) =>\r\n{\r\n    return (\r\n    <div className='pa2 bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n       <input \r\n            className=''\r\n           type='search'\r\n           placeholder='Search Robots'\r\n           onChange={searchChange}\r\n           />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>\r\n{\r\n    return(\r\n\r\n        <div style={{overflowY:'scroll', border:'5px solid black' , height :'800px'}}> \r\n\r\n        {props.children}\r\n              </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React , {Component} from 'react';\r\n \r\nclass ErrorBounding extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    render(){\r\n       if(this.state.hasError){\r\n           return <h1>Sorry Not working</h1>\r\n       }\r\n       return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBounding;","import React, { Component } from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\n\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBounding from '../components/ErrorBounding';\r\n\r\n\r\nclass App extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots:[],\r\n            searchfield:''  \r\n        }\r\n\r\n    }\r\n\r\ncomponentDidMount(){\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n  .then(response=> response.json())\r\n  .then(users => {this.setState({robots:users})})\r\n}\r\n    \r\n  onSearchChange =(event) => {\r\n\r\n    this.setState({searchfield : event.target.value})\r\n      \r\n  }\r\n\r\n\r\n    render() {\r\n      const { robots , searchfield}=this.state;\r\n    const filteredrobots=robots.filter(\r\n        robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n      })\r\n\r\n      if(!robots.length)\r\n      {\r\n        return (\r\n           <div className='tc f2 grow'>\r\n            <h1>Loading boy</h1>\r\n            </div>\r\n        );\r\n      }\r\n      else{\r\n        return (\r\n          <div className='tc'>\r\n              <h1 className=\"f1 lh grow\"> Robot are here </h1>\r\n              <SearchBox searchChange={this.onSearchChange}/>\r\n              <Scroll>\r\n                <ErrorBounding>\r\n                  <Cardlist robots={filteredrobots}/>\r\n                  </ErrorBounding>\r\n              </Scroll>\r\n              </div>\r\n          );\r\n\r\n      }\r\n   \r\n\r\n  }\r\n}\r\n export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\n\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'; \n\n\nReactDOM.render(\n      \n      <App />\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}